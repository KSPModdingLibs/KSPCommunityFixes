// You can set specific patches to false to disable them.
// It is recommended to do so using a ModuleManager patch.
// See the KSPCF_UserSettings.cfg.extra file in the "Extras" folder for an example.

KSP_COMMUNITY_FIXES
{
  // ##########################
  // Major bugfixes
  // ##########################
  
  // Vessel recovery funds properly account for modules implementing IPartCostModifier
  RefundingOnRecovery = true

  // Fix the whole kerbal inventory persistence system being inactive in 1.12.2
  // This cause multiple issues, like being able to bypass kerbal inventories mass/volume
  // limits, and various cargo part duplication / disappearance issues when EVAing / boarding.
  KerbalInventoryPersistence = true

  // Prevent unrecoverable part position drift of Breaking Grounds DLC robotic parts and their
  // children parts.
  RoboticsDrift = true

  // Multiple fixes for the KSP 1.12.3 docking port rotation feature, including rotation induced
  // part position drift.
  DockingPortRotationDriftAndFixes = true

  // Stock autostruts are creating joints between the parts at their current in-physics position, 
  // essentially "freezing" the current vessel deformation in place and making them fight against 
  // the regular part joints. This patch change the autostrut joints to target the vessel original 
  // pristine part positions instead. This improve the overall physics stability when using 
  // autostruts and prevent weird deformations following vessel modification events (decoupling, 
  // docking/undocking, fairing separation...)
  AutoStrutDrift = true

  // Prevent modules persisted state from being lost in existing saves/ships following
  // a mod installation/uninstallation/update
  ModuleIndexingMismatch = true

  // Fix part rotations not being reset to their pristine value when a non-landed is packed,
  // resulting in permanent part rotation drift when docking and other minor/cosmetic issues.
  PackedPartsRotation = true

  // Prevent potential order of execution issues during part initialization. 
  // This fixes the root cause of the "FlightSceneLoadKraken" issue (vessel deformation and kraken 
  // events on scene load) in a more consistent way, and also prevent similar kraken issues when 
  // placing parts with EVA construction.
  PartStartStability = true

  // ##########################
  // Minor bugfixes
  // ##########################

  // Fix the expanded/retracted state of Part Action Window groups being reset
  // when the PAW is internally rebuilt (especially frequent in the editor).
  PAWGroupMemory = true

  // Fix PAW item position randomly changing and flickering 
  PAWItemsOrder = true

  // Fix the kerbals tooltip giving wrong "Max sustainable G" information
  KerbalTooltipMaxSustainedG = true

  // Fix a bug causing the ROC manager to crash during loading with Kopernicus modified systems 
  ROCValidationOOR = true

  // Fix reaction wheels reporting incorrect available torque when the "Wheel Authority" 
  // tweakable is set below 100%. This fix instability issues with the stock SAS and other 
  // attitude controllers from various mods.
  ReactionWheelsPotentialTorque = true

  // Make the stock alarm to respect the day/year length defined by mods like
  // Kronometer. Fix the underlying AppUIMemberDateTime UI widget API to use the
  // custom IDateTimeFormatter if implemented.
  StockAlarmCustomFormatterDate = true

  // Stock alarm preserve line breaks (and tabs) in the description field
  StockAlarmDescPreserveLineBreak = true

  // Fix deployable parts (antennas, solar panels, radiators...) always starting in the extended 
  // state when the model isn't exported in the retracted state. Affect parts from various mods.
  ExtendedDeployableParts = true
  
  // Fix the delta V data (and info panels) on stage UI elements showing
  // when the delta V app and delta V calculations are disabled.
  // Also hide extended burn time info on the navball in this case, because
  // it depends on the stock delta V implementation.
  DeltaVHideWhenDisabled = true

  // Fixes an issue where if a vessel starts out splashed, and decouples from its only
  // splashed parts, it will never leave the splashed state.
  // This also fixes an issue where Splashed overrides Prelaunch as a Situation.
  StickySplashedFixer = true

  // Fix the asteroid/comet spawner generating non-unique Part.flightId identifiers. This has 
  // a few minor side effects in stock (mainly incorrect science bonuses), but this field is 
  // heavily relied upon by various mods and this can cause major issues for them.
  AsteroidSpawnerUniqueFlightId = true
  CometSpawnerUniqueFlightId = true

  // Fix editor tooltip part icons not spinning anymore after hovering on a greyed out surface
  // attachable only part while the editor is empty.
  PartListTooltipIconSpin = true

  // Fix a bunch of bugs with upgrades.
  // Fix upgrades breaking when a PartStatsUpgradeModule is present
  // and fix upgrades not applying properly in the editor
  // (This also fixes InitializeModules not being run on root parts)
  // Fix upgrade cost not being applied to part cost, partupgrades
  // not displaying their correct extended info (in the RnD screen),
  // FindUpgrades finding unlocked but disabled upgrades, UpgradesAvailable 
  // *applying* rather than just reporting about upgrades, and upgrade cost
  // not being added to part cost.
  UpgradeBugs = true

  // Fix applying upgrades directly to the prefab part
  // when creating the PartListTooltip
  // Note: REQUIRES UpgradeBugs to be enabled
  PartTooltipUpgradesApplyToSubstituteParts = false

  // Fix incorrect terrain scatter distribution when a partial longitude range is defined in the
  // PQSLandControl definition.
  ScatterDistribution = true

  // Fix audio source not being centered/aligned with the current vessel after scene switches,
  // causing loss of vessel effects audio and random volume or left/right channel weirdness.
  LostSoundAfterSceneSwitch = true

  // Fix DoubleCurve flattening the tangents of the first keyframe regardless of whether tangents are supplied.
  DoubleCurvePreserveTangents = true

  // Fix recovery of EVAing kerbals either causing their inventory to be recovered twice or the
  // science data they carry not being recovered, depending on the EVA kerbal variant/suit.
  EVAKerbalRecovery = true

  // Fix rescaled servo parts propagating their scale to childrens after actuating the servo in the editor
  RescaledRoboticParts = true

  // Fix engine plates causing the part attached above them to be incorrectly shielded from airstream
  EnginePlateAirstreamShieldedTopPart = true

  // Fix asteroid/comet mass being restored to 100% when reloading after having mined it down to 0%
  AsteroidInfiniteMining = true

  // Fix mass of comets not actually reducing when mining them, despite the PAW saying so.
  CometMiningNotRemovingMass = true

  // Fix Strategies not using Duration settings
  // Note that many stock strategies do have these set, but the code was broken.
  // For this reason this defaults to off, since otherwise it would change
  // stock gameplay.
  StrategyDuration = false

  // ##########################
  // Obsolete bugfixes
  // ##########################

  // Prevent kraken events on flight scene load
  // Disabled by default, the PartStartStability patch implement a better fix for that issue.
  FlightSceneLoadKraken = false

  // ##########################
  // Quality of life fixes
  // ##########################

  // Altimeter widget horizontal position tweakable in the pause menu settings
  AltimeterHorizontalPosition = true

  // Part Action Window inventory UI widgets in a collapsed group by default
  PAWCollapsedInventories = true
  
  // Part Action Window groups for a selection of stock modules
  PAWStockGroups = true

  // Allow tweaking the autostrut mode of wheels/landing legs
  TweakableWheelsAutostrut = true

  // Autostruts can be controlled with action groups
  AutostrutActions = true

  // Allow numeric input ("#" button) in "float edit" PAW items
  UIFloatEditNumericInput = true

  // Add and option to disable the stock maneuver tool from the KSP settings
  DisableManeuverTool = true

  // Make the "Fairing Expansion" state persistent 
  FairingMouseOverPersistence = true

  // Append "[Auto-Saved Craft]" when relevant to the craft name in the Launchpad / Runway UI
  AutoSavedCraftNameAtLaunch = true
  
  // Show date a contract finished when displaying info on a finished contract in Mission Control
  ShowContractFinishDates = true

  // Disable the "intro" popups appearing in the space center, VAB/SPH and tracking station
  // upon creating a new career game. Disabled by default.
  DisableNewGameIntro = false

  // Add a button for hiding/showing the stock toolbar. Also allow accessing the toolbar while
  // in the space center facilities windows (mission control, admin building, R&D...).
  ToolbarShowHide = true

  // Add part actions for locking/unlocking part resources flow state.
  ResourceLockActions = true

  // ##########################
  // Performance tweaks
  // ##########################

  // Reduce scene loading time by caching the current save in memory instead of loading it from disk
  SceneLoadSpeedBoost = true

  // Prevent the buoyancy integrator from eating CPU cycles when the vessel isn't submerged
  OnDemandPartBuoyancy = true

  // Prevent huge memory allocations and resulting occasional stutter on PQS creation happening
  // when moving around near a body surface
  PQSUpdateNoMemoryAlloc = true

  // Remove unused ProgressTracking update handlers. Provides a very noticeable performance uplift in 
  // career games having a large amount of celestial bodies and/or vessels.
  ProgressTrackingSpeedBoost = true

  // Disable the update of orbit lines and markers in flight when the map view isn't shown. Provides
  // decent performance gains in games having a large amount of celestial bodies and/or vessels.
  DisableMapUpdateInFlight = true

  // Reduce constant overhead of ModuleAsteroidDrill and ModuleCometDrill by using the cached 
  // asteroid/comet part lookup results from ModuleResourceHarvester. Improves performance with 
  // large part count vessels having at least one drill part.
  AsteroidAndCometDrillCache = true

  // Fix a bunch of managed memory leaks, mainly by proactively removing GameEvents delegates 
  // originating from destroyed UnityEngine.Object instances. Will log detected leaks and memory
  // usage on scene switches.
  MemoryLeaks = true

  // Additional debugging options for the MemoryLeaks patch. This doesn't provide any user-facing
  // benefit, it just enable extra logging options that are useful to track down memory leaks.
  MEMORY_LEAKS_DEBUGGING
  {
    // Set to true if you want a more accurate figure for the managed memory usage logged by KSPCF 
    // on scene switches.
    ForceGCCollect = false

    // Enable detailed logging of GameEvents delegate leaks detected on scene switches. This only cover
    // leaks originating from destroyed UnityEngine.Object derivatives.
    LogDestroyedUnityObjectGameEventsLeaks = true

    // This will compare alive GameEvents delegates between the last and current scene switch for a given
    // scene, and log detailed information about classes that have an increasing amount of delegates for
    // the same GameEvent. Note that this doesn't include destroyed UnityEngine.Object instances leaks, use
    // the LogDestroyedUnityObjectGameEventsLeaks option to detect those.
    AdvancedGameEventsLeakDetection = false

    // Enable detailed logging of all GameEvents delegates remaining after scene destruction.
    // By comparing the results between two scene switches, this allow hunting down classes that are
    // leaking GameEvent subscriptions.
    LogGameEventsSubscribers = false
  }

  // Fix CommNet update throttling mechanism that exists in stock but doesn't work correctly.
  // This is supposed to prevent full CommNet network updates from happening every frame, but instead to
  // to happen at a regular real-world time interval of 5 seconds while in flight. Enabling this throttling
  // mechanism has an detrimental impact on the precision of the simulation, so this patch isn't enabled by
  // default to avoid issues in mods relying on the stock behavior. Enabling this can provide a decent 
  // performance uplift in games having a large amount of celestial bodies and/or vessels.
  CommNetThrottling = false

  // Interval in real-world seconds between full CommNet network updates.
  COMMNET_THROTTLING_SETTINGS
  {
    unpackedInterval = 5 // interval when the active vessel is not timewarping
    packedInterval = 0.5 // interval when the active vessel is timewarping
  }

  // This tweak eliminates KSP's stock behavior of saving every time
  // you exit a UI-only space center building (AC, MC, etc)
  // and every time you delete a vessel in the Tracking Station
  FewerSaves = false

  // ##########################
  // Modding
  // ##########################

  // Fire GameEvents.onRoboticPartLockChanging and GameEvents.onRoboticPartLockChanged 
  // respectively before and after calls to ModuleDockingNode.ModifyLocked(), following
  // a modification of the ModuleDockingNode.nodeIsLocked field.
  // Disabled by default, you can enable it with a MM patch.
  DockingPortLockedEvents = false

  // Change the UI_Control.onSymmetryFieldChanged callback to behave identically to the
  // UI_Control.onFieldChanged callback :
  // - The callback will only be called when the field value has actually been modified.
  // - The "object" argument will contain the previous field value (instead of the new value).
  // Disabled by default, you can enable it with a MM patch.
  OnSymmetryFieldChanged = false

  // Implement `IConfigNode` members marked as `[Persistent]` serialization support when using 
  // the `CreateObjectFromConfig()`, `LoadObjectFromConfig()` and `CreateConfigFromObject()` methods.
  // Disabled by default, you can enable it with a MM patch.
  // Also adds support for [Persistent] tags on System.Guid
  PersistentIConfigNode = false

  // Fix Admin Building not using HeadImage if that is defined for a Department
  DepartmentHeadImage = true

  // ##########################
  // Localization tools
  // ##########################

  // Uncomment the next line and set it to the desired language code to generate a localization 
  // template on next KSP launch. The file will be created in the KSPCommunityFixes\Localization 
  // directory.
  // - if set to "en-us", this will generate the default localization file based on the source 
  //   code (english) strings.
  // - if set to another language, this will generate a localization file with the english 
  //   localization strings as comments. If a localization file for this language already exists, 
  //   the generated template will reuse existing translated strings.

  // GenerateLocTemplate = en-us
}
